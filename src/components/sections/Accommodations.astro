---
import Dot from "@/assets/Dot.astro";
import Container from "../layout/Container.astro";

import AccommodationsCarousel from "../ui/AccommodationsCarousel.tsx";
import Feature from "../ui/Feature.astro";

// Importar iconos
import Plus18 from "@/assets/icons/Plus18.astro";
import Pool from "@/assets/icons/Pool.astro";
import CoffeeMaker from "@/assets/icons/CoffeeMaker.astro";
import Snow from "@/assets/icons/Snow.astro";
import Cook from "@/assets/icons/Cook.astro";
import PawPrint from "@/assets/icons/PawPrint.astro";
import Bed from "@/assets/icons/Bed.astro";
import BBQ from "@/assets/icons/BBQ.astro";
import AccommodationImages from "../ui/AccomodationImages";
import { ArrowUpRight } from "lucide-react";
---

<section id="alojamiento" class="flex flex-col gap-8">
  <Container>
    <div class="text-center mb-60">
      <p class="text-4xl text-gray-900" id="accommodations-description">
        <span class="text-pretty"> Espacios con intención. </span>
        <br />
        <br />
        Cada alojamiento es un

        <span class="golden-gradient"> santuario privado</span>, diseñado para
        la introspección y el descanso.
      </p>
    </div>

    <div
      class="w-full flex items-center justify-between relative opacity-0"
      id="accommodation-title"
    >
      <div class="flex flex-col w-full">
        <h3
          class="flex items-center relative w-full gap-2 text-6xl uppercase tracking-wider font-medium overflow-hidden flex-wrap"
        >
          <span class="flex flex-nowrap gap-2">
            <span class="text-filled clamp-sm"> Aura </span><Dot />
            <span class="text-stroke clamp-sm"> Gaya </span></span
          >
          <span
            class="underline absolute block left-0 bottom-0 w-full z-50 bg-golden h-px max-w-10/12"
          ></span>
        </h3>

        <p class="text-gray-600 text-base my-3 max-w-md text-pretty">
          Dos acogedoras casetas de madera independientes con acceso a piscina
          privada. Perfectas para una escapada de descanso y bienestar.
        </p>
      </div>
    </div>
  </Container>

  <div
    id="accommodation-image"
    class="w-full bg-white rounded-t-4xl pt-8 flex flex-col"
  >
    <Container class="w-full flex flex-col gap-4 relative">
      <div class="w-full bg-white rounded-3xl flex h-full z-10 p-6">
        <AccommodationsCarousel client:only="react" />
      </div>
    </Container>
    <div id="polygon" class="bg-background h-32 w-full"></div>
  </div>

  <div id="features-title" class="flex flex-col items-center mt-8 mb-8">
    <h3 class="text-3xl p-2 relative">
      <span class="mix-blend-difference text-white"> COMODIDADES</span>

      <span class="shape absolute inset-0 -z-10 bg-purple-200 w-full h-full"
      ></span>
    </h3>
  </div>

  <Container id="features" class="flex flex-col items-center gap-16 mb-4 relative">


    <div class="absolute z-[-1] left-0 top-0 bg-gradient-to-b from-background via-golden/20 to-b h-[140%] w-full"></div>
    <Feature
      title="Cama king size"
      description="Cada vivienda cuenta con una amplia cama doble king size para dos personas, diseñada para el descanso reparador que mereces durante tu retiro de bienestar."
      icon={Bed}
      note="(Cama supletoria disponible por +60€/noche)"
    />
    <Feature
      title="Solo adultos"
      description="Ambiente exclusivo para adultos, perfecto para la introspección y el descanso profundo sin distracciones."
      icon={Plus18}
    />
    <Feature
      title="Piscina privada"
      description="Acceso exclusivo a piscina al aire libre rodeada de naturaleza, ideal para relajación y meditación acuática."
      icon={Pool}
    />
    <!-- <Feature
      title="Desayuno continental"
      description="Desayuno nutritivo con productos frescos, zumos naturales y frutas de temporada para nutrir cuerpo y alma.  "
      icon={CoffeeMaker}
      note="(+7€ / persona)"
    /> -->
    <Feature
      title="Aire acondicionado"
      description="Climatización en todas las estancias para garantizar tu comodidad durante tu retiro de bienestar."
      icon={Snow}
    />
    <Feature
      title="Cocina equipada"
      description="Nevera, microondas y cafetera disponibles para preparar infusiones y comidas conscientes durante tu estancia."
      icon={Cook}
    />
    <Feature
      title="BBQ al aire libre"
      description="Zona de barbacoa privada en el jardín para disfrutar de comidas conscientes al aire libre, conectando con la naturaleza mientras nutres el cuerpo."
      icon={BBQ}
    />
    <Feature
      title="Mascotas bienvenidas"
      description="Aceptamos mascotas bajo petición, porque entendemos que forman parte de tu familia y bienestar."
      icon={PawPrint}
    />
  </Container>

  <div class="shape-white pb-16 w-full flex flex-col gap-4">
    <div class="text-center max-w-3xl">
      <h3
        class="text-gray-900 sr-only text-2xl font-medium mb-4 uppercase text-pretty"
      >
        Descubre Nuestros Espacios de Bienestar
      </h3>
    </div>

    <!-- <div class="grid place-items-center w-full">
      <video
        autoplay
        muted
        loop
        playsinline
        class="w-full h-full object-cover aspect-9/16"
      >
        <source src="/videos/test_video.mp4" type="video/mp4" />
        Your browser does not support the video tag.
      </video>
    </div> -->

    <Container>
      <div id="images" class="flex flex-col gap-4 w-full">
        <AccommodationImages client:only="react" />

        <!-- <a
          class="bg-lavanda self-end px-2 font-medium py-1 uppercase rounded-full flex items-center gap-2 text-sm"
          href="/galeria"
        >
          Ver más imágenes
          <span class="size-4 bg-white rounded-full grid place-items-center">
            <ArrowUpRight className="size-3 shrink-0" />
          </span>
        </a> -->
      </div>
    </Container>
  </div>
</section>

<style>
  .text-filled {
    color: var(--color-gray-900);
  }

  .clamp-sm,
  .clamp-sm div {
    font-size: clamp(2.5rem, 5vw, 4rem);
  }

  .text-stroke {
    color: transparent;
    -webkit-text-stroke: 1px var(--color-gray-900);
    text-stroke: 1px var(--color-gray-900);
    font-family: "Inter", "Helvetica Neue", "Arial", sans-serif;
    font-weight: 500;
  }

  #accommodation-image {
    transform: translateY(-50px) scale(0.95);
    opacity: 0;
  }

  .shape {
    clip-path: polygon(0% 0%, 0% 0%, 0% 100%, 0% 100%);
  }

  /* .shape-white {
    clip-path: polygon(0% 0%, 100% 45%, 100% 100%, 0% 100%);
  } */
</style>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  import { SplitText } from "gsap/SplitText";

  gsap.registerPlugin(ScrollTrigger, SplitText);

  const tl = gsap.timeline({
    defaults: {
      duration: 0.75,
      scrollTrigger: {
        trigger: "#accommodation-title",
        start: "bottom bottom",
        end: "+=500px",
        toggleActions: "play none none reverse",

        scrub: 2,
        // markers: {
        //   indent: 100,
        //   startColor: "purple",
        //   endColor: "orange",
        // },
      },
    },
  });

  const polygonTl = gsap.timeline({
    defaults: {
      ease: "power1.inOut",
      scrollTrigger: {
        trigger: "#polygon",
        start: "top top",
        end: "+=400px",

        toggleActions: "play none none reverse",
        scrub: 1,
        // markers: {
        //   indent: 100,
        //   startColor: "purple",
        //   endColor: "orange",
        // },
      },
    },
  });

  const textStrokeSplit = new SplitText(".text-stroke", {
    type: "chars",
  });

  tl.to("#accommodation-title", {
    opacity: 1,
    y: 25,
    duration: 0.4,
  })
    .to(
      textStrokeSplit.chars,
      {
        color: "var(--color-gray-900)",
        duration: 0.2,
        stagger: 0.2,

        ease: "power1.in",
      },
      "<",
    )

    .fromTo(
      ".underline",
      {
        width: "0%",
      },
      {
        width: "100%",
        duration: 1,
      },

      "<",
    )
    .to(
      "#accommodation-image",
      {
        y: 0,
        scale: 1,
        duration: 0.3,
        ease: "power2.in",
        autoAlpha: 1,
      },
      ">+0.2",
    );

  polygonTl.fromTo(
    "#polygon",
    {
      clipPath: "polygon(0% 10%, 100% 100%, 100% 100%, 0% 100%)",
      duration: 3,
    },

    {
      clipPath: "polygon(0 100%, 100% 0%, 100% 100%, 0% 100%)",
      duration: 3,
      ease: "power2.inOut",
    },
  );

  const textTl = gsap.timeline({
    default: {
      duration: 0.75,
      ease: "power2.out",
    },
    scrollTrigger: {
      trigger: "#alojamiento",
      start: "bottom bottom",
      end: "top center",

      toggleActions: "play none none reverse",
      // markers: {
      //   startColor: "yellow",
      //   endColor: "blue",
      // },
    },
  });

  textTl.to(
    ".golden-gradient",
    {
      backgroundPosition: "-500% 0",
      ease: "none",
      duration: 0.2,
      scrollTrigger: {
        scrub: 1,
      },
    },
    ">",
  );

  const featuresTl = gsap.timeline({
    defaults: {
      duration: 0.75,
      ease: "power2.out",
      scrollTrigger: {
        trigger: "#features",
        start: "top top",
        end: "+=300px",

        scrub: 1.5,
        toggleActions: "play none none none",

        // markers: {
        //   startColor: "green",
        //   endColor: "red",
        // },
      },
    },
  });

  featuresTl.to(
    ".shape",
    {
      clipPath: "polygon(0% 0%, 83% 0%, 100% 100%, 13% 100%)", // forma final
      duration: 1,
      ease: "power2.inOut",
    },
    ">",
  );

  gsap.utils.toArray("#features .feature").forEach((feature, i) => {
    gsap.fromTo(
      feature as gsap.TweenTarget,
      { autoAlpha: 0, y: 30 },
      {
        autoAlpha: 1,
        y: 0,
        duration: 0.6,
        ease: "power2.out",
        scrollTrigger: {
          trigger: feature as gsap.DOMTarget,
          start: "top 15%", // when top of feature is 80% down the viewport
          end: "top top",
          toggleActions: "play none none none",
          // scrub: 1, // optional if you want smoothness
          // markers: true,
        },
      },
    );
  });

  const whiteShapeTL = gsap.timeline({
    defaults: {
      ease: "power1.inOut",
      scrollTrigger: {
        trigger: ".shape-white",
        start: "top top",
        end: "+=500px",

        toggleActions: "play none none reverse",
        scrub: 1,
        // markers: {
        //   startColor: "purple",
        //   endColor: "orange",
        // },
      },
    },
  });

  // whiteShapeTL.fromTo(
  //   ".shape-white",
  //   {
  //     clipPath: "polygon(0% 100%,100% 45%,100% 100%,0% 100%)",
  //     duration: 3,
  //   },

  //   {
  //     clipPath: "polygon(0%  0%,100% 0%,100% 100%,0% 100%)",
  //     duration: 3,
  //     ease: "power2.inOut",
  //   },
  // );

  let images = gsap.utils.toArray("#images .img-wrap");

  // https://www.youtube.com/watch?v=8gCQZSe40OY
  images.forEach((img, i) => {
    const isLast = i === images.length - 1;

    gsap
      .timeline({
        scrollTrigger: {
          trigger: img as gsap.DOMTarget,
          start: "top top",

          scrub: 2.5,
        },
      })
      .to(img as gsap.TweenTarget, {
        y: isLast ? -50 : -100,
        ease: "elastic.inOut",
        duration: 1,
      });
  });

  // // GSAP animation for the accommodation section
  // tl.from("#accommodation-image video", {
  //   opacity: 0,
  //   y: 200,
  //   duration: 0.4,
  //   scale: 0.95,
  //   stagger: 0.2,
  //   // rotate: 5,
  //   ease: "expo.inOut",
  // });

  // const videoTl = gsap.timeline({
  //   defaults: {
  //     scrollTrigger: {
  //       trigger: "#accommodation-image",
  //       start: "top top",
  //       //end: "+=200%",
  //       scrub: 1,
  //       pin: true,

  //       pinnedContainer: "#accommodation-image",

  //       markers: true,
  //     },
  //   },
  // });

  // videoTl.to("#accommodation-image video", {
  //   scale: 1,
  //   duration: 0.5,
  // });
</script>
